/*
* Paper: Kenward and Roger Power
* Author: Sarah Kreidler
* Date: 4/19/2013
*
* calculatePowerKenwardRoger.sxs
*
* SAS/IML Module to calculate power for the Wald test
* with denominator degrees of freedom as described by Kenward and Roger
* 
*
*/

/*
* getObservedF
*
* Get the Wald statistic that would be obtained if
* we observed Beta and SigmaS exactly as specified
*
* Arguments:
*  X - design matrix for expected value
*  Beta - choices for parameters related to the mean
*  C - linear contrast for fixed effects
*  SigmaS - covariance structure for the complete model
*  ThetaNull - matrix of null hypothesis
*
* Returns:
*  observed F value
*/
start getObservedF(X, Beta, C, SigmaS, ThetaNull);
	* get the row dimension of C;
	a = NROW(C);

	* calculate the middle matrix in the Wald statistic;
	M = C*INV(X`*INV(SigmaS)*X)*C`;

	* calculate the obsered theta and difference from the null hypothesis;
	thetaObs = C*Beta;
	thetaObsDiff = thetaObs - ThetaNull;

	Fobserved = thetaObsDiff`*INV(M)*thetaObsDiff / a;

	return(Fobserved);
finish;

/*
*
* Calculate the denominator degrees of freedom for
* the approximate noncentral F used for power
*
* Arguments
*  Fobserved - f statistic that would be obtained if we
*              observed the Beta and SigmaS as specified
*  a - numerator degrees of freedom, also the rows of C
*  nuW - the denominator degrees of freedom for the true
*        distribution of the Wald test (power will vary
*        depending on the choice of this value)
*
* Returns
*  ddf - the denominator degrees of freedom for the
*        approximate noncentral F
*
*/
start getDenominatorDegreesOfFreedom(Fobserved, a, nuW);

    * calculate rho, the ratio of the variance of the true noncentral Wald distribution;
	* to 2 times the square of the expectation of the true central Wald distribution;
	rhoNumerator = a*(1+Fobserved)*(1+Fobserved) + (1+(2*Fobserved))*(nuW - 2);
	rho = rhoNumerator / (a*(nuW-4));

	* calculate the numerator for ddf ;
	numerator = 2*(1+2*Fobserved)+ a*(1+Fobserved)*(1+Fobserved);
	denominator = rho*a-1-2*Fobserved;

	* calculate the degrees of freedom for the approximate F;
	ddf = 4 + (numerator / denominator);
	return (ddf);

finish;

/*
* calculatePowerKenwardRoger
*
* Calculate power for the linear mixed model Wald test
* with denominator degrees of freedom as described by 
* Kenward and Roger (1997)
*
* Implements the noncentral F approximation developed
* by Kreidler et al.
*
* Arguments:
*  X - design matrix for expected value
*  Beta - choices for parameters related to the mean
*  C - linear contrast for fixed effects
*  SigmaS - covariance structure for the complete model
*  ThetaNull - matrix of null hypothesis
*  alpha - desired Type I error rate
*
* Returns:
*  power
*/
start calculatePowerKenwardRoger(X, Beta, C, SigmaS, ThetaNull, alpha, numISU);

  * calculate the total sample size;
  N = numISU;
  
  * calculate the rank of X;
  rankX=round(trace(ginv(X)*X));

  * choose value for true ddf;
  ddfTrue = N - rankX; 

  * get the F we would obtain were we to observe Beta and SigmaS;
  Fobserved = getObservedF(X, Beta, C, SigmaS, ThetaNull);

  * calculate numerator degrees of freedom;
  ndf = NROW(C);

  * calculate the denominator degrees of freedom;
  ddf = getDenominatorDegreesOfFreedom(Fobserved, ndf, ddfTrue);

  * get the critical F;
  Fcrit = FINV(1-alpha,ndf,ddf);

  * calculate lambda;
  lambda = (ddf*(ddfTrue-2))/(ddfTrue*(ddf-2));
  * scale F crit;
  Fcrit = Fcrit * lambda;

  * calculate the noncentrality;
  omegaP = ndf * Fobserved;

  * calculate power;
  power = 1 - CDF("F", FCRIT, ndf, ddf, omegaP);

  * build the results, including F distribtuion info and power;
  results = Fcrit || Fobserved || ndf || ddf || omegaP || power;

  * calculate power;
  return (results);

finish;
